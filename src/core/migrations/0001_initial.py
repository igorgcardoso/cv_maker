# Generated by Django 4.2.4 on 2023-08-16 14:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('middle_name', models.CharField(max_length=50, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('birth_date', models.DateField(verbose_name='birth date')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('tel', models.CharField(max_length=14, unique=True, verbose_name='tel')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'core_users',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'core_cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
                'db_table': 'core_countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CV_Language',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('language', models.CharField(choices=[('en-us', 'English'), ('pt-br', 'Portuguese (Brazil)')], max_length=5, unique=True, verbose_name='language')),
            ],
            options={
                'verbose_name': 'cv language',
                'verbose_name_plural': 'cv languages',
                'db_table': 'core_cv_languages',
                'ordering': ['language'],
            },
        ),
        migrations.CreateModel(
            name='EducationCourse',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'education course',
                'verbose_name_plural': 'education courses',
                'db_table': 'core_education_courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EducationDegree',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'education degree',
                'verbose_name_plural': 'education degrees',
                'db_table': 'core_education_degrees',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExperienceCompany',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'experience company',
                'verbose_name_plural': 'experience companies',
                'db_table': 'core_experience_companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExperienceRole',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'experience role',
                'verbose_name_plural': 'experience roles',
                'db_table': 'core_experience_roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
                'db_table': 'core_languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'db_table': 'core_roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'skill',
                'verbose_name_plural': 'skills',
                'db_table': 'core_skills',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('base_url', models.URLField(unique=True, verbose_name='base url')),
                ('icon_url', models.URLField(unique=True, verbose_name='icon url')),
            ],
            options={
                'verbose_name': 'social network',
                'verbose_name_plural': 'social networks',
                'db_table': 'core_social_networks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserSocialNetwork',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='username')),
                ('social_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.socialnetwork')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user social network',
                'verbose_name_plural': 'user social networks',
                'db_table': 'core_user_social_networks',
                'ordering': ['social_network__name'],
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('level', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='level')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user skill',
                'verbose_name_plural': 'user skills',
                'db_table': 'core_user_skills',
                'ordering': ['-level', 'skill__name'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
                'db_table': 'core_user_roles',
                'ordering': ['role__name'],
            },
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('A1', 'Beginner'), ('A2', 'Elementary'), ('B1', 'Intermediate'), ('B2', 'Upper Intermediate'), ('C1', 'Advanced'), ('C2', 'Proficient')], max_length=2, verbose_name='level')),
                ('is_native', models.BooleanField(default=False, verbose_name='is native')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.language')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user language',
                'verbose_name_plural': 'user languages',
                'db_table': 'core_user_languages',
                'ordering': ['-is_native', '-level', 'language__name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('abbreviation', models.CharField(max_length=2, unique=True, verbose_name='abbreviation')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='core.country')),
            ],
            options={
                'verbose_name': 'state',
                'verbose_name_plural': 'states',
                'db_table': 'core_states',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='role',
            name='users',
            field=models.ManyToManyField(related_name='+', through='core.UserRole', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('is_completed', models.BooleanField(default=True, verbose_name='is completed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'db_table': 'core_projects',
                'ordering': ['-start_date', '-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.experiencecompany')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.experiencerole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'experience',
                'verbose_name_plural': 'experiences',
                'db_table': 'core_experiences',
                'ordering': ['-start_date', '-end_date'],
            },
        ),
        migrations.CreateModel(
            name='EducationInstitution',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.city')),
            ],
            options={
                'verbose_name': 'education institution',
                'verbose_name_plural': 'education institutions',
                'db_table': 'core_education_institutions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('start_date', models.DateField(help_text='The year when you started the course', verbose_name='start date')),
                ('end_date', models.DateField(blank=True, help_text='The year when you finished the course', null=True, verbose_name='end date')),
                ('is_completed', models.BooleanField(default=True, verbose_name='is completed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.educationcourse')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.educationdegree')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.educationinstitution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'education',
                'verbose_name_plural': 'education',
                'db_table': 'core_education',
                'ordering': ['-start_date__year', '-end_date__year'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='core.state'),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.city'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='social_networks',
            field=models.ManyToManyField(related_name='+', through='core.UserSocialNetwork', to='core.socialnetwork'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='usersocialnetwork',
            constraint=models.UniqueConstraint(fields=('user', 'social_network'), name='unique_user_social_network'),
        ),
        migrations.AddConstraint(
            model_name='userskill',
            constraint=models.UniqueConstraint(fields=('user', 'skill'), name='unique_user_skill'),
        ),
        migrations.AddConstraint(
            model_name='userrole',
            constraint=models.UniqueConstraint(fields=('user', 'role'), name='unique_user_role'),
        ),
        migrations.AddConstraint(
            model_name='userlanguage',
            constraint=models.UniqueConstraint(fields=('user', 'language'), name='unique_user_language'),
        ),
        migrations.AddConstraint(
            model_name='state',
            constraint=models.UniqueConstraint(fields=('name', 'country'), name='unique_state'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_project'),
        ),
        migrations.AddConstraint(
            model_name='experience',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'role'), name='unique_experience'),
        ),
        migrations.AddConstraint(
            model_name='educationinstitution',
            constraint=models.UniqueConstraint(fields=('name', 'city'), name='unique_education_institution'),
        ),
        migrations.AddConstraint(
            model_name='education',
            constraint=models.UniqueConstraint(fields=('user', 'institution', 'course', 'degree', 'is_completed'), name='unique_education'),
        ),
        migrations.AddConstraint(
            model_name='city',
            constraint=models.UniqueConstraint(fields=('name', 'state'), name='unique_city'),
        ),
    ]
